If statements:

int myInt becomes 13
int myInt0 becomes 14
if(myInt,>=,myInt0) {
	
	
	
}
else {



}

If boolean operators:
 - >= Greater than or equal to
 - > Greater than
 - <= Less than or equal to
 - < Less than
 - = Equal to
 - =/= Not equal to

Boolean data notes:
Anything other than 1: true
0: false

Functions:

With return value and parameters:

                         v--- Will expect KeywordType.TYPE or block
func myFunc(byte b,shr s) byte {
	
	byte myLocalByte
	
	ret myLocalByte
	
}

With return value but no parameters:

func myFunc0 shr {
	
	shr myShort
	
	ret myShort
	
}

Without return value but with parameters:

	    v----- notice how in Keyword#hasParameters (C#) the parameters are optional, and if no parameters are provided, then the Keyword itself is responsible to throw a ParsingError. Parameters are seperated by commas.
func myFunc1(int param) {
	
	ret
	
}

Without return value or parameters:

func myFunc2 {
	
	ret
	
}